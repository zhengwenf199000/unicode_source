<template>
	<view class="content" @click="capture" @touchmove="capture">
		<content-bg></content-bg>

		<view class="content-nav">
			<image class="content-nav-home" src="@/static/imgs/Home.png" mode="widthFix" @click="homeClick"></image>
		</view>
		<view class="content-c change_content">
			<breadcrumb title="自助申请自助打印" actionTitle="执行地变更"></breadcrumb>
			<action-table v-if="activitys.length > 0" :tableMapper="tableMapper" :tableData="activitys" @viewBtnClick="viewBtnClick"></action-table>
			<empty-view v-else text="当前无申请" :action="false" @applyClick="applyClick"></empty-view>
			<view class="change_content-backbtns">
				<button class="change_content-backbtn" type="primary" @click="applyClick">申请</button>
				<button class="change_content-backbtn" type="primary" @click="backClick">返回</button>
			</view>
		</view>
	</view>
</template>

<script>
	import {
		requestApi,
		apis
	} from '@/utils/http'
	import { applyChangeTableMapper, applyChangeDetailMapper } from '@/utils/tableMappers'
	import userInactiveMixin from '@/mixins/userInactiveMixin';
	
	export default {
		mixins: [ userInactiveMixin ],
		data() {
			return {
				tableMapper: applyChangeTableMapper,
				activitys: []
			}
		},
		computed: {
			token() {
				return this.$store.getters.token
			}
		},
		onLoad(options) {
			this.idnum = options.idnum;
			// this.activitys = []
		},
		onShow() {
			this.getActivitys()
		},
		methods: {
			getActivitys() {
				uni.showLoading()
				requestApi(apis.getNewRelocate, {
					id_num: this.idnum
				}, {
					token: this.token
				}).then(data => {
					uni.hideLoading()
					this.activitys = data
				}).catch(err => {
					uni.showToast({
						title: err,
						icon: 'none'
					})
				})
			},
			viewBtnClick(index) {
				const act = this.activitys[index]
				console.log(act);
				this.$store.commit('setDetailData', {
					name: '变更详情',
					data: act,
					detailMapper: applyChangeDetailMapper
				})
				uni.navigateTo({
					url: '/pages/compound/detail?onlyView=true',
					animationType: 'none'
				})
			},
			applyClick() {
				uni.navigateTo({
					// url: '/pages/apply/do?idnum=' + this.idnum,
					url: '/pages/blank/blank?idnum=' + this.idnum + '&target=/pages/apply/do',
					animationType: 'none'
				})
			},
			homeClick() {
				uni.reLaunch({
					url: '/pages/home/home'
				})
			},
			backClick() {
				uni.navigateBack()
			}
		}
	}
</script>

<style lang="scss">
	.change_content {
		.change_content-backbtns {
			margin: 10px 0;
			display: flex;
			flex-direction: row;
			justify-content: space-between;
			
			& .change_content-backbtn {
				width: 100px;
				background-color: $theme-dark-color;
			}
		}
	}
</style>
